@use "sass:map";
@use "../base/variables" as *;
@use "../helpers/maps" as *;
@use "../helpers/mixins" as *;

html,
body {
  width: 100%;
  height: 100%;
}

:root {
  font-size: 16px;
}

* {
  margin: 0;
  padding: 0;
  font-family: $font-primary;
  font-size: map.get($font-sizes, "xs");
  font-weight: map.get($font-weights, "regular");
  scroll-behavior: smooth;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

*:focus {
  outline: none;
}

body {
  overflow: hidden;
  position: relative;
  z-index: -100;
  background-color: map.get($background-colors, "secondary");
}

main {
  height: 100vh;
  position: relative;
}

button {
  border: none;
  background-color: inherit;
  cursor: pointer;

  &:disabled {
    cursor: not-allowed;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  letter-spacing: 1px;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;

  &:focus-visible {
    color: map.get($text-colors, "primary");
  }
}

@include media-query("xxs") {
  :root {
    font-size: 8px;
  }
}
@include media-query("xs") {
  :root {
    font-size: 9px;
  }
}
@include media-query("sm") {
  :root {
    font-size: 13px;
  }
}
@include media-query("md") {
  :root {
    font-size: 15px;
  }
}
@include media-query("lg") {
  :root {
    font-size: 16px;
  }
}
@include media-query("xl") {
  :root {
    font-size: 18px;
  }
}
@include media-query("xxl") {
  :root {
    font-size: 20px;
  }
}

/// CHANGE THIS LATER WHEN THE SUPPORT IS BETTER
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background-color: map.get($background-colors, "secondary");
}

::-webkit-scrollbar-thumb {
  background-color: map.get($background-colors, "primary");
  border-radius: 30px;
}

* {
  scrollbar-width: thin;
  scrollbar-color: map.get($background-colors, "primary")
    map.get($background-colors, "secondary");
}

input {
  background-color: transparent;
  border: none;
  cursor: inherit;

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    appearance: none;
    margin: 0;
  }

  &:-webkit-autofill {
    -webkit-text-fill-color: map-get($text-colors, "white");
    box-shadow: inset 0 0 0 32px $secondary-light !important;
  }

  &:autofill {
    -webkit-text-fill-color: map.get($text-colors, "white");
    box-shadow: inset 0 0 0 32px $secondary-light !important;
  }
}

input[type="number"] {
  -moz-appearance: textfield;
  appearance: textfield;
}

input[type="radio"] {
  appearance: none;
  font-family: inherit;
  color: map.get($text-colors, "primary");
  width: 1rem;
  height: 1rem;
  border: 3px solid map.get($text-colors, "primary");
  box-shadow: $shadow-light;
  border-radius: 50%;
  position: relative;
  cursor: pointer;

  &:focus-visible {
    outline: 2px solid map.get($background-colors, "info");
  }
}

input[type="radio"]::before {
  content: "";
  top: 50%;
  left: 50%;
  width: 0.6rem;
  height: 0.6rem;
  position: absolute;

  border-radius: 50%;
  background-color: map.get($text-colors, "primary");

  transform: translate(-50%, -50%) scale(0);
  transform-origin: center;
  transition: 250ms;
}

input[type="radio"]:checked::before {
  transform: translate(-50%, -50%) scale(1);
}

input[type="checkbox"] {
  font: inherit;
  appearance: none;
  width: 1.2rem;
  height: 1.2rem;
  position: relative;

  color: map.get($background-colors, "primary");
  border: 2.5px solid map.get($text-colors, "primary");
  cursor: pointer;
  border-radius: 3px;

  &:focus-visible {
    outline: 2px solid map.get($background-colors, "info");
  }

  &.checkbox-xs {
    width: 1rem;
    height: 1rem;
    border: 2px solid map.get($text-colors, "primary");

    &:checked::before {
      content: "";
      width: 0.35rem;
      height: 0.75rem;
      position: absolute;

      background-color: transparent;

      border-right: 2.25px solid map.get($background-colors, "secondary");
      border-bottom: 2.25px solid map.get($background-colors, "secondary");
      border-bottom-right-radius: 2.25px;

      transform: rotate(45deg) translate(40%, -20%);
      transform-origin: center;
    }
  }
}

input[type="checkbox"]:checked {
  background-color: map.get($background-colors, "primary");
}

input[type="checkbox"]:checked::before {
  content: "";

  width: 0.5rem;
  height: 0.9rem;
  position: absolute;

  border-right: 3px solid map-get($background-colors, "secondary");
  border-bottom: 3px solid map-get($background-colors, "secondary");
  border-bottom-right-radius: 2px;

  transform: rotate(45deg) translateY(-0.15rem);
  background-color: transparent;
}

input[type="file"]::file-selector-button {
  display: none;
}

.drift-widget-controller-icon,
.drift-frame-controller {
  display: none !important;
}
