//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "phone_number_country_code")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub country_code: String,
	pub phone_code: String,
	pub country_name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::user_phone_number::Entity")]
	UserPhoneNumber,
	#[sea_orm(has_many = "super::user_to_sign_up::Entity")]
	UserToSignUp,
	#[sea_orm(has_many = "super::user_unverified_phone_number::Entity")]
	UserUnverifiedPhoneNumber,
}

impl Related<super::user_phone_number::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::UserPhoneNumber.def()
	}
}

impl Related<super::user_to_sign_up::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::UserToSignUp.def()
	}
}

impl Related<super::user_unverified_phone_number::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::UserUnverifiedPhoneNumber.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
