//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "deployment_environment_variable")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub deployment_id: Uuid,
	#[sea_orm(primary_key, auto_increment = false)]
	pub name: String,
	#[sea_orm(column_type = "Text", nullable)]
	pub value: Option<String>,
	pub secret_id: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::deployment::Entity",
		from = "Column::DeploymentId",
		to = "super::deployment::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Deployment,
	#[sea_orm(
		belongs_to = "super::secret::Entity",
		from = "Column::SecretId",
		to = "super::secret::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Secret,
}

impl Related<super::deployment::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Deployment.def()
	}
}

impl Related<super::secret::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Secret.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
