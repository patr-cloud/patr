//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::ResourceOwnerType;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "domain")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	#[sea_orm(column_type = "Text")]
	pub name: String,
	pub r#type: ResourceOwnerType,
	#[sea_orm(column_type = "Text")]
	pub tld: String,
	pub deleted: Option<TimeDateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::domain_tld::Entity",
		from = "Column::Tld",
		to = "super::domain_tld::Column::Tld",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	DomainTld,
	#[sea_orm(has_many = "super::personal_domain::Entity")]
	PersonalDomain,
	#[sea_orm(has_many = "super::workspace_domain::Entity")]
	WorkspaceDomain,
}

impl Related<super::domain_tld::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::DomainTld.def()
	}
}

impl Related<super::personal_domain::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::PersonalDomain.def()
	}
}

impl Related<super::workspace_domain::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::WorkspaceDomain.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
