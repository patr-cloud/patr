//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::UserLoginType;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "web_login")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub login_id: Uuid,
	pub user_id: Uuid,
	#[sea_orm(column_type = "Text")]
	pub refresh_token: String,
	pub token_expiry: DateTimeWithTimeZone,
	pub created: DateTimeWithTimeZone,
	#[sea_orm(column_type = "custom(\"inet\")")]
	pub created_ip: String,
	#[sea_orm(column_type = "custom(\"geometry\")")]
	pub created_location: String,
	#[sea_orm(column_type = "Text")]
	pub created_country: String,
	#[sea_orm(column_type = "Text")]
	pub created_region: String,
	#[sea_orm(column_type = "Text")]
	pub created_city: String,
	#[sea_orm(column_type = "Text")]
	pub created_timezone: String,
	pub last_login: DateTimeWithTimeZone,
	pub last_activity: DateTimeWithTimeZone,
	#[sea_orm(column_type = "custom(\"inet\")")]
	pub last_activity_ip: String,
	#[sea_orm(column_type = "custom(\"geometry\")")]
	pub last_activity_location: String,
	#[sea_orm(column_type = "Text")]
	pub last_activity_country: String,
	#[sea_orm(column_type = "Text")]
	pub last_activity_region: String,
	#[sea_orm(column_type = "Text")]
	pub last_activity_city: String,
	#[sea_orm(column_type = "Text")]
	pub last_activity_timezone: String,
	#[sea_orm(column_type = "Text")]
	pub last_activity_user_agent: String,
	pub login_type: UserLoginType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::user_login::Entity",
		from = "Column::LoginId",
		to = "super::user_login::Column::LoginId",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	UserLogin,
}

impl Related<super::user_login::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::UserLogin.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
