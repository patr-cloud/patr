//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::DomainNameserverType;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_controlled_domain")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub domain_id: Uuid,
	pub nameserver_type: DomainNameserverType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::workspace_domain::Entity",
		from = "Column::DomainId",
		to = "super::workspace_domain::Column::NameserverType",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	WorkspaceDomain,
}

impl Related<super::workspace_domain::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::WorkspaceDomain.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
