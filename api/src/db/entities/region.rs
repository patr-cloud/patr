//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::{InfrastructureCloudProvider, RegionStatus};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "region")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	#[sea_orm(column_type = "Text")]
	pub name: String,
	pub provider: InfrastructureCloudProvider,
	pub workspace_id: Option<Uuid>,
	#[sea_orm(column_type = "Text", nullable)]
	pub message_log: Option<String>,
	pub status: RegionStatus,
	#[sea_orm(column_type = "Text", nullable)]
	pub ingress_hostname: Option<String>,
	#[sea_orm(column_type = "Text", nullable)]
	pub cloudflare_certificate_id: Option<String>,
	pub config_file: Option<Json>,
	pub deleted: Option<TimeDateTimeWithTimeZone>,
	pub disconnected_at: Option<TimeDateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::deployment::Entity")]
	Deployment,
	#[sea_orm(has_many = "super::managed_database::Entity")]
	ManagedDatabase,
	#[sea_orm(
		belongs_to = "super::resource::Entity",
		from = "Column::Id",
		to = "super::resource::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Resource,
	#[sea_orm(
		belongs_to = "super::workspace::Entity",
		from = "Column::WorkspaceId",
		to = "super::workspace::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Workspace,
}

impl Related<super::deployment::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Deployment.def()
	}
}

impl Related<super::managed_database::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::ManagedDatabase.def()
	}
}

impl Related<super::resource::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Resource.def()
	}
}

impl Related<super::workspace::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Workspace.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
