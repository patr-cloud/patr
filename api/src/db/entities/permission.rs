//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "permission")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	#[sea_orm(unique)]
	pub name: String,
	pub description: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::role_resource_permissions_type::Entity")]
	RoleResourcePermissionsType,
	#[sea_orm(
		has_many = "super::user_api_token_resource_permissions_type::Entity"
	)]
	UserApiTokenResourcePermissionsType,
	#[sea_orm(has_many = "super::workspace_audit_log::Entity")]
	WorkspaceAuditLog,
}

impl Related<super::role_resource_permissions_type::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::RoleResourcePermissionsType.def()
	}
}

impl Related<super::user_api_token_resource_permissions_type::Entity>
	for Entity
{
	fn to() -> RelationDef {
		Relation::UserApiTokenResourcePermissionsType.def()
	}
}

impl Related<super::workspace_audit_log::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::WorkspaceAuditLog.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
