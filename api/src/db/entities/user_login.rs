//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::UserLoginType;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_login")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub login_id: Uuid,
	pub user_id: Uuid,
	pub login_type: UserLoginType,
	pub created: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::user::Entity",
		from = "Column::UserId",
		to = "super::user::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	User,
	#[sea_orm(has_many = "super::user_api_token::Entity")]
	UserApiToken,
	#[sea_orm(has_many = "super::web_login::Entity")]
	WebLogin,
	#[sea_orm(has_many = "super::workspace_audit_log::Entity")]
	WorkspaceAuditLog,
}

impl Related<super::user::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::User.def()
	}
}

impl Related<super::user_api_token::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::UserApiToken.def()
	}
}

impl Related<super::web_login::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::WebLogin.def()
	}
}

impl Related<super::workspace_audit_log::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::WorkspaceAuditLog.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
