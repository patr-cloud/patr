//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "role")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	pub name: String,
	pub description: String,
	pub owner_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::role_resource_permissions_type::Entity")]
	RoleResourcePermissionsType,
	#[sea_orm(
		belongs_to = "super::workspace::Entity",
		from = "Column::OwnerId",
		to = "super::workspace::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Workspace,
	#[sea_orm(has_many = "super::workspace_user::Entity")]
	WorkspaceUser,
}

impl Related<super::role_resource_permissions_type::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::RoleResourcePermissionsType.def()
	}
}

impl Related<super::workspace::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Workspace.def()
	}
}

impl Related<super::workspace_user::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::WorkspaceUser.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
