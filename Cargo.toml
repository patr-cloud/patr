[workspace]
members = [
    "api",
    "cli",
    "cloudflare-ingress",
    "components",
    "controller",
    "hosted-frontend",
    "macros",
    "models",
]
package.authors = ["Rakshith Ravi <rakshith.ravi@patr.cloud>"]
package.description = "Patr API and all it's dependencies"
package.edition = "2021"
package.rust-version = "1.76"
package.version = "0.18.0"
resolver = "2"

[workspace.dependencies]
anyhow = { version = "1", default-features = false }
argon2 = { version = "0.5", default-features = false }
axum = { version = "0.7", default-features = false }
axum-extra = { version = "0.9", default-features = false }
axum-typed-websockets = { version = "0.6", default-features = false }
base64 = { version = "0.22", default-features = false }
clap = { version = "4", default-features = false }
comfy-table = { version = "7", default-features = false }
components = { path = "components", default-features = false }
config = { version = "0.14", default-features = false }
console_error_panic_hook = { version = "0.1", default-features = false }
either = { version = "1", default-features = false }
futures = { version = "0.3", default-features = false }
headers = { version = "0.4", default-features = false }
hex = { version = "0.4", default-features = false }
hosted-frontend = { path = "hosted-frontend", default-features = false }
http = { version = "1", default-features = false }
httparse = { version = "1", default-features = false }
ipinfo = { version = "3", default-features = false }
ipnetwork = { version = "0.20", default-features = false }
jsonwebtoken = { version = "9", default-features = false }
k8s-openapi = { version = "0.21", default-features = false }
kube = { version = "0.88", default-features = false }
leptos = { version = "0.6", default-features = false }
leptos-use = { version = "0.10", default-features = false }
leptos_axum = { version = "0.6", default-features = false }
leptos_meta = { version = "0.6", default-features = false }
leptos_router = { version = "0.6", default-features = false }
log = { version = "0.4", default-features = false }
macros = { path = "macros", default-features = false }
matchit = { version = "0.7", default-features = false }
mime_guess = { version = "2", default-features = false }
models = { path = "models", default-features = false }
open = { version = "5", default-features = false }
opentelemetry = { version = "0.22", default-features = false }
opentelemetry-otlp = { version = "0.15", default-features = false }
opentelemetry_sdk = { version = "0.22", default-features = false }
preprocess = { version = "0.3", default-features = false }
proc-macro2 = { version = "1", default-features = false }
quote = { version = "1", default-features = false }
rand = { version = "0.8", default-features = false }
reqwest = { version = "0.11", default-features = false }
rust-s3 = { version = "0.34.0-rc3", default-features = false }
rustis = { version = "0.12", default-features = false }
schemars = { version = "0.8", default-features = false }
semver = { version = "1", default-features = false }
serde = { version = "1", default-features = false }
serde_json = { version = "1", default-features = false }
serde_test = { version = "1", default-features = false }
serde_urlencoded = { version = "0.7", default-features = false }
sha2 = { version = "0.10", default-features = false }
sqlx = { version = "0.7", default-features = false }
strum = { version = "0.26", default-features = false }
syn = { version = "2", default-features = false }
thiserror = { version = "1", default-features = false }
time = { version = "0.3", default-features = false }
tokio = { version = "1", default-features = false }
tokio-stream = { version = "0.1", default-features = false }
tokio-tungstenite = { version = "0.21", default-features = false }
totp-rs = { version = "5", default-features = false }
tower = { version = "0.4", default-features = false }
tower-http = { version = "0.5", default-features = false }
tracing = { version = "0.1", default-features = false }
tracing-log = { version = "0.2", default-features = false }
tracing-opentelemetry = { version = "0.23", default-features = false }
tracing-subscriber = { version = "0.3", default-features = false }
typed-builder = { version = "0.18", default-features = false }
url = { version = "2", default-features = false }
uuid = { version = "1", default-features = false }
wasm-bindgen = { version = "0.2", default-features = false }
wasm-logger = { version = "0.2", default-features = false }
web-sys = { version = "0.3", default-features = false }
woothee = { version = "0.13", default-features = false }
worker = { version = "0.0.20", default-features = false }

[workspace.dev-dependencies]
k8s-openapi = { features = ["v1_29"] }

[profile.dev]
opt-level = 0

[profile.dev.package."*"]
opt-level = 0

[profile.release]
codegen-units = 1
lto = true
opt-level = 3
panic = "abort"

[profile.frontend]
inherits = "release"
opt-level = 'z'
strip = true

[[workspace.metadata.leptos]]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
bin-package = "api"
lib-package = "hosted-frontend"
name = "dashboard"
output-name = "dashboard"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/hosted-frontend"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "hosted-frontend/assets/styles/index.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
assets-dir = "components/assets"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# The profile to use for the lib target when compiling for release
lib-profile-release = "frontend"
