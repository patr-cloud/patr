#-----------------------------------------
# Variables
#-----------------------------------------
API_PORT="3000"
API_HOST="api"

DATABASE_USERNAME="username"
DATABASE_PASSWORD="psql123"
DATABASE_HOST="postgres"
DATABASE_PORT="5432"
DATABASE_NAME="api"

REDIS_HOST="redis"
REDIS_PORT="6379"
REDIS_DB="0"

REGISTRY_HOST="registry"
REGISTRY_PORT="5000"

RABBITMQ_USERNAME="guest"
RABBITMQ_PASSWORD="guest"
RABBITMQ_HOST="rabbitmq"
RABBITMQ_PORT="5672"
RABBITMQ_MANAGEMENT_PORT="15672"

VAULT_HOST="vault"
VAULT_PORT="8200"
VAULT_TOKEN="1234567890"

MAILCHIMP_APIKEY="api-key"
MAILCHIMP_LIST_ID="list-id"

DRONE_HOST="drone"
DRONE_PORT="8000"

GITHUB_CLIENT_ID="1234567890"
GITHUB_CLIENT_SECRET="1234567890"
#-----------------------------------------
# API config variables
APP_PORT=${API_PORT}
APP_BINDADDRESS="0.0.0.0"
APP_BASEPATH="/"
APP_PASSWORDPEPPER="keyboard cat"
APP_JWTSECRET="keyboard cat"

# S3 is not used right now
APP_S3_ENDPOINT="s3.localhost"
APP_S3_REGION="sample-region"
APP_S3_BUCKET="sample-bucket"
APP_S3_KEY="key123"
APP_S3_SECRET="secret123"

APP_DATABASE_HOST=${DATABASE_HOST}
APP_DATABASE_PORT=${DATABASE_PORT}
APP_DATABASE_USER=${DATABASE_USERNAME}
APP_DATABASE_PASSWORD=${DATABASE_PASSWORD}
APP_DATABASE_DATABASE=${DATABASE_NAME}
APP_DATABASE_CONNECTIONLIMIT=10

# MongoDB is not used right now
APP_MONGODB_HOST=${DATABASE_HOST}
APP_MONGODB_PORT=${DATABASE_PORT}
APP_MONGODB_USER=${DATABASE_USERNAME}
APP_MONGODB_PASSWORD=${DATABASE_PASSWORD}
APP_MONGODB_DATABASE=${DATABASE_NAME}
APP_MONGODB_CONNECTIONLIMIT=10

APP_REDIS_HOST=${REDIS_HOST}
APP_REDIS_PORT=${REDIS_PORT}
APP_REDIS_DATABASE=${REDIS_DB}
APP_REDIS_CONNECTIONLIMIT=10
APP_REDIS_SECURE=false

APP_EMAIL_HOST=smtp.example.com
APP_EMAIL_PORT=587
APP_EMAIL_SECURE=true
APP_EMAIL_USERNAME=no-reply@example.com
APP_EMAIL_FROM=no-reply@example.com
APP_EMAIL_PASSWORD=123456

# Twillio is not used right now
APP_TWILIO_USERNAME="<example-user-name>"
APP_TWILIO_ACCESSTOKEN="<ACCESS-TOKEN-HHERE>"
APP_TWILIO_FROMNUMBER="+0123456789"

APP_CLOUDFLARE_ACCOUNTID="<example-account-id>"
APP_CLOUDFLARE_ACCOUNTEMAIL="account@example.com"
APP_CLOUDFLARE_APITOKEN="<example-api-token>"

APP_DOCKERREGISTRY_SERVICENAME="Patr Registry Service"
APP_DOCKERREGISTRY_ISSUER="patr"
APP_DOCKERREGISTRY_REGISTRYURL=http://${REGISTRY_HOST}:5000
APP_DOCKERREGISTRY_PRIVATEKEY=$(cat ./assets/patr/certs/ecdsa.key.pem)
APP_DOCKERREGISTRY_PUBLICKEY=$(cat ./assets/patr/certs/ecdsa.pubkey.pem)
APP_DOCKERREGISTRY_PUBLICKEYDER=$(cat ./assets/patr/certs/ecdsa.pubkey.der | base64 | tr -d '\n')
APP_DOCKERREGISTRY_AUTHORIZATIONHEADER=1234567890

APP_DIGITALOCEAN_APIKEY="key"
APP_DIGITALOCEAN_REGISTRY=""

# Kubernetes needs to be setup later
APP_KUBERNETES_CERTIFICATEAUTHORITYDATA=""
APP_KUBERNETES_CLUSTERNAME=""
APP_KUBERNETES_CLUSTERURL=""
APP_KUBERNETES_AUTHNAME=""
APP_KUBERNETES_AUTHUSERNAME=""
APP_KUBERNETES_AUTHTOKEN=""
APP_KUBERNETES_CONTEXTNAME=""
APP_KUBERNETES_CERTISSUERHTTP="letsencrypt-staging"
APP_KUBERNETES_CERTISSUERDNS="letsencrypt-staging-dns"
APP_KUBERNETES_STATICSITEPROXYSERVICE="proxy-static-site-service.default.svc.cluster.local"

# Prometheus requires kubernetes
APP_PROMETHEUS_HOST="prometheus.example.com"
APP_PROMETHEUS_USERNAME="admin"
APP_PROMETHEUS_PASSWORD="admin"

# Chargebee cannot be tested right now
APP_CHARGEBEE_APIKEY="key"
APP_CHARGEBEE_URL="https://example.chargebee.com/api/v2"
APP_CHARGEBEE_CREDITAMOUNT="69000"
APP_CHARGEBEE_DESCRIPTION="Patr Test"
APP_CHARGEBEE_GATEWAYID="test"
APP_CHARGEBEE_REDIRECTURL="https://app.patr.cloud/card-data/success"

APP_RABBITMQ_HOST=${RABBITMQ_HOST}
APP_RABBITMQ_PORT=${RABBITMQ_PORT}
APP_RABBITMQ_QUEUE="infrastructure"
APP_RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
APP_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}

APP_VAULT_ADDRESS="http://${VAULT_HOST}:${VAULT_PORT}/"
APP_VAULT_TOKEN=${VAULT_TOKEN}

APP_MAILCHIMP_APIKEY=${MAILCHIMP_APIKEY}
APP_MAILCHIMP_LISTID=${MAILCHIMP_LIST_ID}

APP_DRONE_URL="http://${DRONE_HOST}"

APP_GITHUB_CLIENTID=${GITHUB_CLIENT_ID}
APP_GITHUB_CLIENTSECRET=${GITHUB_CLIENT_SECRET}

# Set database URL for development purposes
DATABASE_URL=postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
# DATABASE_URL=mysql://rakshith:mysql@localhost:3306/api
SQLX_OFFLINE=true

# Set the registry notification environment variable
REGISTRY_APP_ENDPOINT="- name: api\n  url: http://${API_HOST}:${API_PORT}/webhook/docker-registry/notification\n  headers:\n    Authorization: [${APP_DOCKERREGISTRY_AUTHORIZATIONHEADER}]\n  timeout: 30m\n  threshold: 5\n  backoff: 1m"
