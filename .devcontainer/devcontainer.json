// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/docker-from-docker-compose
{
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",

	"customizations": {
		"vscode": {
			"settings": {
				"rust-analyzer.checkOnSave.extraArgs": [
					"--target-dir=./.devcontainer/volume/rust-analyzer"
				],

				// "lldb.executable": "/usr/bin/lldb",

				"files.watcherExclude": {
					"**/target/**": true,
					"./devcontainer/volume/**": true
				}
			},

			"extensions": [
				"ms-azuretools.vscode-docker",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"vadimcn.vscode-lldb",
				"mutantdino.resourcemonitor",
				"rust-lang.rust-analyzer",
				"tamasfe.even-better-toml",
				"serayuzgur.crates",
				"usernamehw.errorlens",
				"eamodio.gitlens",
				"mhutchie.git-graph"
			]
		}
	},

	"forwardPorts": [
		// 3000,	// patr backend
		// 5432,	// postgres
		// 6379, 	// redis
		// 5672,	// rabbitmq
		// 15672, 	// rabbitmq-ui
		// 5000,	// docker-registry
	],

	// TODO: initializeCommand runs in host OS shell, so its better
	// to move these commands to other stages so that we don't need to depend on host OS
	// but the only exception is COMPOSE_PROJECT_NAME where it set unique before calling docker-compose
	"initializeCommand": "bash -c ./.devcontainer/scripts/initCerts.sh && ./initEnvFile.sh",

	"postCreateCommand": "echo devcontainer created successfully",

	"postStartCommand": "nohup bash -c 'minikube start && ./initEnvFile.sh &' > minikube.log 2>&1",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}

// TODO:
// 1. K8s cluster init script
// 		- regcred secret
// 		- tls certificate secret
// 		- setting up the cert manger and other needed services
// 		- Setup the private CA of docker registry in minikube cluster
// 			https://minikube.sigs.k8s.io/docs/handbook/untrusted_certs/
